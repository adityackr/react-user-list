{"version":3,"sources":["components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpnese.js","App.js","index.js"],"names":["Card","props","classes","className","children","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpenseFilter","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","Number","parseFloat","toFixed","ExpensesList","items","length","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpnese","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","App","DUMMY_EXPENSES","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f02af19a.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = `${Math.round((props.value / props.maxValue) * 100)}%`;\r\n    }\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div\r\n                    className=\"chart-bar__fill\"\r\n                    style={{ height: barFillHeight }}\r\n                ></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(\r\n        (dataPoint) => dataPoint.value\r\n    );\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nconst ExpenseChart = (props) => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">\r\n                        ৳\r\n                        {Number(\r\n                            parseFloat(props.amount).toFixed(2)\r\n                        ).toLocaleString('en')}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n                <ExpenseItem\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                    key={expense.id}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseChart from './ExpenseChart';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport './Expenses.css';\r\nimport ExpensesList from './ExpensesList';\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter((expense) => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpenseFilter\r\n                selected={filteredYear}\r\n                onChangeFilter={filterChangeHandler}\r\n            />\r\n            <ExpenseChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={enteredAmount}\r\n                        min=\"0.01\"\r\n                        step=\"0.01\"\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={enteredDate}\r\n                        min=\"2017-01-01\"\r\n                        max=\"2022-12-31\"\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpnese = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString(),\r\n        };\r\n\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing && (\r\n                <button onClick={startEditingHandler}>Add New Expense</button>\r\n            )}\r\n            {isEditing && (\r\n                <ExpenseForm\r\n                    onCancel={stopEditingHandler}\r\n                    onSaveExpenseData={saveExpenseDataHandler}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpnese;\r\n","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpnese from './components/NewExpense/NewExpnese';\n\nconst App = () => {\n    const DUMMY_EXPENSES = [\n        {\n            id: 'e1',\n            title: 'Toilet Paper',\n            amount: 50,\n            date: new Date(2020, 7, 14),\n        },\n        {\n            id: 'e2',\n            title: 'New TV',\n            amount: 25000,\n            date: new Date(2021, 2, 12),\n        },\n        {\n            id: 'e3',\n            title: 'Car Insurance',\n            amount: 15000,\n            date: new Date(2021, 2, 28),\n        },\n        {\n            id: 'e4',\n            title: 'New Desk (Wooden)',\n            amount: 5000,\n            date: new Date(2021, 5, 12),\n        },\n    ];\n\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n    const addExpenseDataHandler = (expense) => {\n        setExpenses((prevExpenses) => {\n            return [expense, ...prevExpenses];\n        });\n    };\n\n    return (\n        <div>\n            <NewExpnese onAddExpense={addExpenseDataHandler} />\n            <Expenses items={expenses} />\n        </div>\n    );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}